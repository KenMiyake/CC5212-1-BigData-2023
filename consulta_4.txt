
-- header de books reviews
-- Id,Title,Price,User_id,profileName,review/helpfulness,review/score,review/time,review/summary,review/text

-- books data header 
--Title,description,authors,image,previewLink,publisher,publishedDate,infoLink,categories,ratingsCount

raw_reviews= LOAD 'hdfs://cm:9000/uhadoop2023/proyects/kirbypato/Books_rating.csv.gz' USING PigStorage(',') AS (id:chararray, title:chararray, price:double, user_id:chararray, profile_name:chararray, helpfulness:chararray, score:double, time:chararray, summary: chararray,text_content: chararray);


-- Comenzamos con la cantidad de resenhas buenas por libro

smaller_raw_reviews = FILTER raw_reviews BY (price is not null);

-- good reviews, para caso good

goods_reviews_with_ones= FOREACH smaller_raw_reviews GENERATE id AS id, title AS title, price AS price, ((score>3 AND score IS NOT NULL )? 1:0) as goods_one_zero;

good_ones_books_grouped= GROUP goods_reviews_with_ones BY id;

good_books_count= FOREACH good_ones_books_grouped GENERATE $0,flatten($1.$1),flatten($1.$2), SUM($1.$3) AS good_reviews;

unique= DISTINCT good_books_count;

good_books_count_ordered= ORDER unique BY good_reviews;


-- bad reviews, para caso bad 

bads_reviews_with_ones= FOREACH smaller_raw_reviews GENERATE id AS id, title AS title1, price AS price, ((score<3 AND score IS NOT NULL )? 1:0) as bads_one_zero;

bad_ones_books_grouped= GROUP bads_reviews_with_ones BY id;

bad_books_count= FOREACH bad_ones_books_grouped GENERATE $0,flatten($1.$1),flatten($1.$2), SUM($1.$3) AS bad_reviews;

unique= DISTINCT bad_books_count;

bad_books_count_ordered= ORDER unique BY bad_reviews;



-- suma de todo

all_reviews_with_ones = FOREACH smaller_raw_reviews GENERATE id AS id, title AS title, price AS price, ((score IS NOT NULL )? 1:0) as one_zero;

all_ones_books_grouped= GROUP all_reviews_with_ones BY id;

all_books_count= FOREACH all_ones_books_grouped GENERATE $0,flatten($1.$1),flatten($1.$2), SUM($1.$3) AS all_reviews;

unique2= DISTINCT all_books_count;

all_books_count_ordered= ORDER unique2 BY all_reviews;

-- join good, final good

good_total_ratio = JOIN good_books_count_ordered BY title, all_books_count_ordered BY title;

good_ratio= FOREACH good_total_ratio GENERATE $0 AS id, $1 AS title, $2 AS price, ((double) $3)/((double)$7) AS ratio;

good_ratio_order = ORDER good_ratio BY price;

-- join bad

bad_total_ratio = JOIN bad_books_count_ordered BY title, all_books_count_ordered BY title;

bad_ratio= FOREACH bad_total_ratio GENERATE $0 AS id, $1 AS title, $2 AS price, ((double) $3)/((double)$7) AS ratio;

bad_ratio_order = ORDER bad_ratio BY price;






